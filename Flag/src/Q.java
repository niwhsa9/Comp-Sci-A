import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

import javax.swing.JFrame;
import javax.swing.JPanel;



public class Q {
	public static class Panel extends JPanel {
		
		
		int[] x = {498, 499, 500, 501, 501, 502, 502, 503, 503, 504, 504, 505, 505, 506, 506, 507, 507, 508, 508, 509, 509, 511, 511, 512, 512, 513, 513, 514, 514, 515, 515, 516, 516, 517, 517, 518, 518, 519, 519, 520, 520, 521, 521, 522, 522, 523, 523, 524, 524, 525, 525, 526, 526, 527, 527, 528, 528, 529, 529, 530, 530, 531, 531, 532, 532, 533, 533, 534, 534, 537, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 578, 577, 577, 576, 576, 575, 575, 574, 574, 573, 573, 572, 572, 571, 571, 570, 570, 569, 569, 568, 568, 567, 567, 566, 566, 565, 565, 564, 564, 563, 563, 562, 562, 561, 561, 560, 560, 559, 559, 558, 558, 557, 557, 560, 566, 578, 578, 592, 592, 606, 606, 612, 613, 613, 614, 614, 615, 615, 616, 616, 617, 617, 618, 618, 619, 619, 620, 620, 621, 621, 622, 622, 623, 623, 624, 624, 625, 626, 627, 628, 631, 632, 636, 637, 640, 641, 645, 646, 650, 651, 655, 656, 659, 660, 664, 665, 669, 670, 673, 674, 678, 679, 683, 684, 686, 687, 687, 686, 686, 685, 685, 684, 684, 683, 683, 682, 682, 681, 681, 680, 680, 679, 679, 678, 678, 677, 677, 676, 676, 675, 675, 674, 674, 673, 673, 672, 672, 671, 671, 670, 670, 669, 669, 668, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 693, 692, 691, 686, 685, 681, 680, 676, 675, 671, 670, 665, 664, 660, 659, 655, 654, 649, 648, 644, 643, 639, 638, 634, 633, 628, 627, 623, 622, 618, 617, 613, 612, 608, 607, 602, 601, 597, 596, 594, 594, 593, 593, 594, 594, 595, 595, 596, 596, 597, 597, 598, 598, 599, 599, 600, 600, 601, 601, 602, 602, 603, 603, 604, 604, 605, 605, 604, 603, 602, 597, 596, 592, 591, 586, 585, 580, 579, 574, 573, 569, 568, 563, 562, 557, 556, 552, 551, 546, 545, 540, 539, 535, 534, 529, 528, 523, 522, 518, 517, 512, 511, 510, 509, 508, 506, 506, 505, 505, 506, 506, 507, 507, 508, 508, 509, 509, 508, 491, 490, 490, 491, 491, 492, 492, 493, 493, 494, 494, 493, 493, 491, 490, 489, 488, 487, 482, 481, 477, 476, 471, 470, 465, 464, 460, 459, 454, 453, 448, 447, 443, 442, 437, 436, 431, 430, 426, 425, 420, 419, 414, 413, 408, 407, 403, 402, 397, 396, 395, 394, 394, 395, 395, 396, 396, 397, 397, 398, 398, 399, 399, 400, 400, 401, 401, 402, 402, 403, 403, 404, 404, 405, 405, 406, 406, 405, 405, 403, 402, 398, 397, 392, 391, 387, 386, 382, 381, 377, 376, 372, 371, 366, 365, 361, 360, 356, 355, 351, 350, 345, 344, 340, 339, 335, 334, 329, 328, 324, 323, 319, 318, 314, 313, 308, 307, 306, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 331, 330, 330, 329, 329, 328, 328, 327, 327, 326, 326, 325, 325, 324, 324, 323, 323, 322, 322, 321, 321, 320, 320, 319, 319, 318, 318, 317, 317, 316, 316, 315, 315, 314, 314, 313, 313, 312, 312, 313, 315, 316, 320, 321, 325, 326, 329, 330, 334, 335, 339, 340, 343, 344, 348, 349, 353, 354, 358, 359, 362, 363, 367, 368, 371, 372, 373, 374, 375, 375, 376, 376, 377, 377, 378, 378, 379, 379, 380, 380, 381, 381, 382, 382, 383, 383, 384, 384, 385, 385, 386, 386, 387, 393, 393, 407, 407, 421, 421, 433, 439, 442, 442, 441, 441, 440, 440, 439, 439, 438, 438, 437, 437, 436, 436, 435, 435, 434, 434, 433, 433, 432, 432, 431, 431, 430, 430, 429, 429, 428, 428, 427, 427, 426, 426, 425, 425, 424, 424, 423, 423, 422, 422, 421, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 462, 465, 465, 466, 466, 467, 467, 468, 468, 469, 469, 470, 470, 471, 471, 472, 472, 473, 473, 474, 474, 475, 475, 476, 476, 477, 477, 478, 478, 479, 479, 480, 480, 481, 481, 482, 482, 483, 483, 484, 484, 485, 485, 486, 486, 487, 487, 488, 488, 490, 490, 491, 491, 492, 492, 493, 493, 494, 494, 495, 495, 496, 496, 497, 497, 498};
		int[] y = {43, 42, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 112, 111, 111, 110, 110, 108, 108, 107, 107, 105, 105, 104, 104, 103, 103, 101, 101, 100, 100, 99, 99, 97, 97, 96, 96, 94, 94, 93, 93, 92, 93, 94, 95, 100, 101, 105, 106, 110, 111, 115, 116, 120, 121, 125, 126, 131, 132, 136, 137, 141, 142, 146, 147, 151, 152, 156, 157, 162, 163, 167, 168, 172, 173, 177, 178, 182, 183, 187, 188, 192, 193, 198, 199, 206, 209, 209, 197, 196, 182, 181, 167, 166, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 188, 189, 189, 190, 190, 189, 189, 188, 188, 187, 187, 186, 186, 185, 185, 184, 184, 183, 183, 182, 182, 181, 181, 180, 180, 179, 179, 178, 178, 179, 180, 181, 184, 185, 187, 188, 190, 191, 193, 194, 196, 197, 199, 200, 202, 203, 205, 206, 208, 209, 211, 212, 214, 215, 217, 218, 220, 221, 223, 224, 227, 228, 230, 231, 233, 234, 236, 237, 243, 245, 245, 246, 246, 247, 247, 248, 248, 249, 249, 250, 250, 251, 251, 252, 252, 253, 253, 254, 254, 255, 255, 256, 257, 258, 258, 263, 263, 267, 267, 271, 271, 275, 275, 280, 280, 284, 284, 288, 288, 293, 293, 297, 297, 301, 301, 305, 305, 310, 310, 314, 314, 318, 318, 322, 322, 326, 326, 331, 331, 335, 335, 337, 338, 339, 343, 344, 345, 346, 348, 349, 351, 352, 354, 355, 356, 357, 359, 360, 362, 363, 365, 366, 367, 368, 370, 371, 373, 374, 376, 377, 377, 376, 376, 375, 375, 374, 374, 373, 373, 372, 372, 371, 371, 370, 370, 369, 369, 368, 368, 367, 367, 366, 366, 365, 365, 364, 364, 363, 363, 362, 362, 361, 361, 362, 362, 363, 363, 365, 366, 367, 388, 389, 407, 408, 426, 427, 445, 446, 460, 461, 461, 460, 446, 445, 427, 426, 408, 407, 389, 388, 367, 366, 365, 363, 363, 362, 362, 361, 361, 362, 362, 363, 363, 364, 364, 365, 365, 366, 366, 367, 367, 368, 368, 369, 369, 370, 370, 371, 371, 372, 372, 373, 373, 374, 374, 375, 375, 376, 376, 377, 377, 376, 374, 373, 371, 370, 368, 367, 366, 365, 363, 362, 360, 359, 357, 356, 355, 354, 352, 351, 349, 348, 346, 345, 344, 343, 339, 338, 337, 335, 335, 331, 331, 326, 326, 322, 322, 318, 318, 314, 314, 310, 310, 305, 305, 301, 301, 297, 297, 293, 293, 288, 288, 284, 284, 280, 280, 275, 275, 271, 271, 267, 267, 263, 263, 258, 258, 257, 256, 255, 255, 254, 254, 253, 253, 252, 252, 251, 251, 250, 250, 249, 249, 248, 248, 247, 247, 246, 246, 245, 245, 243, 237, 236, 234, 233, 231, 230, 228, 227, 224, 223, 221, 220, 218, 217, 215, 214, 212, 211, 209, 208, 206, 205, 203, 202, 200, 199, 197, 196, 194, 193, 191, 190, 188, 187, 185, 184, 181, 180, 179, 178, 178, 179, 179, 180, 180, 181, 181, 182, 182, 183, 183, 184, 184, 185, 185, 186, 186, 187, 187, 188, 188, 189, 189, 190, 190, 189, 189, 188, 188, 187, 186, 185, 184, 182, 181, 180, 179, 178, 177, 175, 174, 173, 172, 171, 170, 168, 167, 166, 165, 164, 163, 161, 160, 166, 167, 181, 182, 196, 197, 209, 209, 206, 199, 198, 193, 192, 188, 187, 183, 182, 178, 177, 173, 172, 168, 167, 163, 162, 157, 156, 152, 151, 147, 146, 142, 141, 137, 136, 132, 131, 126, 125, 121, 120, 116, 115, 111, 110, 106, 105, 101, 100, 95, 94, 93, 92, 93, 93, 94, 94, 96, 96, 97, 97, 99, 99, 100, 100, 101, 101, 103, 103, 104, 104, 105, 105, 107, 107, 108, 108, 110, 110, 111, 111, 112, 112, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44};
		public Panel() { /*
			new Thread(new Runnable(){
				@Override
				public void run() {
					while(true) {
						try { 
							Thread.sleep(10);
							repaint();
						} catch(Exception e) {};
					}
				}}).start(); */
			for(int i = 0; i < x.length; i++) {
				x[i] *= 0.5;
				y[i] *= 0.5;
				x[i] += 140.0;
				y[i] += 50.0;
			}
		}
		
		@Override
		public void paintComponent(Graphics g) {
			
			
			Graphics2D g2d = (Graphics2D) g;
			g2d.setColor(Color.WHITE);
			g2d.fillRect(0, 0, 800, 400);
			g2d.setColor(Color.RED);
			g2d.fillPolygon(x, y, x.length);
			g2d.fillRect(0, 0, 200, 400);
			g2d.fillRect(600, 0, 200, 400);
			
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		JFrame window = new JFrame();
		window.setSize(800, 400);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setLocationRelativeTo(null);
		window.setVisible(true);
		Panel j = new Panel();
		window.add(j);
		
		
	}

}